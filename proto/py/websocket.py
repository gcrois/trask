from .tasks import *
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: websocket.proto
# plugin: python-betterproto
from dataclasses import dataclass
from typing import List

import betterproto


@dataclass
class ClientMessage(betterproto.Message):
    available_tasks: "AvailableTasks" = betterproto.message_field(1, group="message")
    execute: "ExecuteTask" = betterproto.message_field(2, group="message")
    file_response: "FileResponse" = betterproto.message_field(3, group="message")
    pause: "Pause" = betterproto.message_field(4, group="message")
    resume: "Resume" = betterproto.message_field(5, group="message")
    handshake: "ClientHandshake" = betterproto.message_field(6, group="message")


@dataclass
class ServerMessage(betterproto.Message):
    accept_task: "AcceptTask" = betterproto.message_field(1, group="message")
    no_task_available: "NoTaskAvailable" = betterproto.message_field(2, group="message")
    task_result: "TaskResult" = betterproto.message_field(3, group="message")
    incremental_update: "IncrementalUpdate" = betterproto.message_field(
        4, group="message"
    )
    error: "ErrorResponse" = betterproto.message_field(5, group="message")
    file_request: "FileRequest" = betterproto.message_field(6, group="message")
    file_send: "FileSend" = betterproto.message_field(7, group="message")
    request_available_tasks: "RequestAvailableTasks" = betterproto.message_field(
        8, group="message"
    )
    handshake: "ServerHandshake" = betterproto.message_field(9, group="message")


@dataclass
class RequestAvailableTasks(betterproto.Message):
    client_id: str = betterproto.string_field(1)


@dataclass
class AvailableTasks(betterproto.Message):
    tasks: List["Task"] = betterproto.message_field(1)


@dataclass
class Task(betterproto.Message):
    id: str = betterproto.string_field(1)
    name: str = betterproto.string_field(2)
    request: TaskRequest = betterproto.message_field(3)


@dataclass
class ExecuteTask(betterproto.Message):
    task_id: str = betterproto.string_field(1)
    name: str = betterproto.string_field(2)
    request: TaskRequest = betterproto.message_field(3)


@dataclass
class Pause(betterproto.Message):
    pass


@dataclass
class Resume(betterproto.Message):
    pass


@dataclass
class ClientHandshake(betterproto.Message):
    version: str = betterproto.string_field(1)


@dataclass
class ServerHandshake(betterproto.Message):
    version: str = betterproto.string_field(1)


@dataclass
class AcceptTask(betterproto.Message):
    task_id: str = betterproto.string_field(1)


@dataclass
class NoTaskAvailable(betterproto.Message):
    pass


@dataclass
class TaskResult(betterproto.Message):
    task_id: str = betterproto.string_field(1)
    result: TaskResponse = betterproto.message_field(2)


@dataclass
class IncrementalUpdate(betterproto.Message):
    task_id: str = betterproto.string_field(1)
    msg: str = betterproto.string_field(2)
    update: TaskResponse = betterproto.message_field(3)


@dataclass
class ErrorResponse(betterproto.Message):
    task_id: str = betterproto.string_field(1)
    error: str = betterproto.string_field(2)


@dataclass
class FileRequest(betterproto.Message):
    file_id: str = betterproto.string_field(1)


@dataclass
class FileResponse(betterproto.Message):
    file_id: str = betterproto.string_field(1)
    content: str = betterproto.string_field(2)


@dataclass
class FileSend(betterproto.Message):
    file_id: str = betterproto.string_field(1)
    content: str = betterproto.string_field(2)
